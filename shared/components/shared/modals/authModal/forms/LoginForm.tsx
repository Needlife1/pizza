'use client';

import { FormProvider, useForm } from 'react-hook-form';
import { formLoginSchema, TFormLoginValues } from './schemas';
import { zodResolver } from '@hookform/resolvers/zod';
import { FormInput } from '../../../form';
import { Button } from '@/shared/components/ui';
import toast from 'react-hot-toast';
import { signIn } from 'next-auth/react';
import { DialogTitle } from '@radix-ui/react-dialog';

interface Props {
  onClose?: VoidFunction;
}

export const LoginForm: React.FC<Props> = ({onClose}) => {
  const form = useForm<TFormLoginValues>({
    resolver: zodResolver(formLoginSchema),
    defaultValues: {
      email: '',
      password: '',
    },
  });

  const onsubmit = async (data: TFormLoginValues) => {
    try { 
      const resp = await signIn('credentials', {
        ...data,
        redirect: false,
      })

      if (!resp?.ok) throw Error();

      onClose?.();
      toast.success('–í–∏ —É—Å–ø—ñ—à–Ω–æ —É–≤—ñ–π—à–ª–∏ –≤ –∞–∫–∞—É–Ω—Ç!', {
        icon: '‚úÖ',
      });
          
      } catch (error) {
          console.error('Login error:', error);
          toast.error('–ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –¥–∞–Ω—ñ —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.', {
            icon: 'üö´',
          });
    }
  }

  return (
    <FormProvider {...form}>
      <form
        className="flex flex-col gap-5"
        onSubmit={form.handleSubmit(onsubmit)}
      >
        <div className="flex justify-between items-center">
          <div className="mr-2">
            <DialogTitle className="text-[26px] font-bold">
              {'–í—Ö—ñ–¥ —É –∞–∫–∞—É–Ω—Ç'}
            </DialogTitle>
            <p className="text-gray-400">
              –í–≤–µ–¥—ñ—Ç—å –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É, —â–æ–± —É–≤—ñ–π—Ç–∏ –¥–æ —Å–≤–æ–≥–æ –∞–∫–∞—É–Ω—Ç–∞.
            </p>
          </div>
        </div>

        <FormInput name="email" label="E-Mail" required />
        <FormInput name="password" label="–ü–∞—Ä–æ–ª—å" type="password" required />

        <Button
          loading={form.formState.isSubmitting}
          className="h-12 text-base"
        >
          –£–≤—ñ–π—Ç–∏
        </Button>
      </form>
    </FormProvider>
  );
};
